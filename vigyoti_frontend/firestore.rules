rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Subscriptions collection
    match /subscriptions/{userId} {
      allow read: if isOwner(userId);
      allow write: if false; // Only allow writes from server-side
    }

    // Workspaces collection
    match /workspaces/{workspaceId} {
      allow read: if isAuthenticated() && (
        resource.data.ownerId == request.auth.uid ||
        request.auth.uid in resource.data.members
      );
      allow write: if isAuthenticated() && (
        resource.data.ownerId == request.auth.uid ||
        request.auth.uid in resource.data.members
      );
    }

    // Projects collection
    match /projects/{projectId} {
      allow read: if isAuthenticated() && (
        get(/databases/$(database)/documents/workspaces/$(resource.data.workspaceId)).data.ownerId == request.auth.uid ||
        request.auth.uid in get(/databases/$(database)/documents/workspaces/$(resource.data.workspaceId)).data.members
      );
      allow write: if isAuthenticated() && (
        get(/databases/$(database)/documents/workspaces/$(resource.data.workspaceId)).data.ownerId == request.auth.uid ||
        request.auth.uid in get(/databases/$(database)/documents/workspaces/$(resource.data.workspaceId)).data.members
      );
    }

    // Credits collection
    match /credits/{userId} {
      allow read: if isOwner(userId);
      allow write: if false; // Only allow writes from server-side
    }

    // Credit usage collection
    match /credit-usage/{usageId} {
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow write: if false; // Only allow writes from server-side
    }
  }
} 