rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isWorkspaceMember(workspaceData) {
      return isOwner(workspaceData.ownerId) || 
             (workspaceData.members != null && request.auth.uid in workspaceData.members);
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated() && isOwner(userId);
      allow write: if isAuthenticated() && isOwner(userId);
    }

    // Workspaces collection
    match /workspaces/{workspaceId} {
      allow read: if isAuthenticated() && (
        resource == null || 
        isWorkspaceMember(resource.data)
      );
      allow create: if isAuthenticated() && request.resource.data.ownerId == request.auth.uid;
      allow update, delete: if isAuthenticated() && isWorkspaceMember(resource.data);
    }

    // Projects collection
    match /projects/{projectId} {
      allow read: if isAuthenticated() && (
        resource == null ||
        get(/databases/$(database)/documents/workspaces/$(resource.data.workspaceId)).data.ownerId == request.auth.uid ||
        request.auth.uid in get(/databases/$(database)/documents/workspaces/$(resource.data.workspaceId)).data.members
      );
      allow create: if isAuthenticated() && (
        get(/databases/$(database)/documents/workspaces/$(request.resource.data.workspaceId)).data.ownerId == request.auth.uid ||
        request.auth.uid in get(/databases/$(database)/documents/workspaces/$(request.resource.data.workspaceId)).data.members
      );
      allow update, delete: if isAuthenticated() && (
        get(/databases/$(database)/documents/workspaces/$(resource.data.workspaceId)).data.ownerId == request.auth.uid ||
        request.auth.uid in get(/databases/$(database)/documents/workspaces/$(resource.data.workspaceId)).data.members
      );
    }

    // Credits collection
    match /credits/{creditId} {
      allow read: if isAuthenticated() && isOwner(creditId);
      allow write: if isAuthenticated() && isOwner(creditId);
    }
  }
} 